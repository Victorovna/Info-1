#include "stdafx.h"
#include <iostream>
#include <ctime>
using namespace std;

struct Node {
	int data;
	Node *p;
};

Node *  primaryInitialization(int data);
void    add(Node **pEnd, int data);
int     propulsion(Node **pBegin);

int _tmain()
{
	setlocale(LC_ALL, "russian");
	int n;
	cout << "введите количество элементов последовательности" << endl;
	cin >> n;
	int* arr;
	arr = new int[n];
	srand(time(NULL));
	arr[1] = rand() % 100;
	cout << arr[1] << " ";
	for (int i = 2; i<n; i++)
	{
		arr[i] = rand() % 100 - 50;
		cout << arr[i] << " ";
	}
	cout << endl;
	Node *pBegin = primaryInitialization(arr[1]);
	Node *pEnd = pBegin;
	for (int j = 2; j<n; j++)
	{
		if (arr[j]>0)
		{
			add(&pEnd, arr[j]);
		}
	}
	while (pBegin) cout << propulsion(&pBegin) << ' ';
	system("pause");
	return 0;
}

Node * primaryInitialization(int data){
	Node *pV = new Node;
	pV->data = data;
	pV->p = 0;
	return pV;
}

void add(Node **pEnd, int data) {
	Node *pV = new Node;
	pV->data = data;
	pV->p = 0;
	(*pEnd)->p = pV;
	*pEnd = pV;
}

int propulsion(Node **pBegin) {
	int temp = (*pBegin)->data;
	Node *pV = *pBegin;
	*pBegin = (*pBegin)->p;
	delete pV;
	return temp;
}
