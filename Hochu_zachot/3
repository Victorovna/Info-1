//$$---- Form CPP ----
//---------------------------------------------------------------------------
 
#include <vcl.h>
#pragma hdrstop
 
#include "Unit1.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm1 *Form1;
//---------------------------------------------------------------------------
__fastcall TForm1::TForm1(TComponent* Owner)
    : TForm(Owner)
{
}
//---------------------------------------------------------------------------
void __fastcall TForm1::Edit1Change(TObject *Sender)
{
    String Currency[2][4] = {{"рубль",   "рубля",   "рублей", "М"},
                 {"копейка", "копейки", "копеек", "Ж"}};
 
    try
    {
        Label1->Caption = ToText(Edit1->Text.ToDouble(), Currency);
    }
    catch(...)
    {
 
    }
}
 
String __fastcall ToLowerCase(String str, bool NotUse)
{
    return NotUse ? str : AnsiLowerCase(str);
}
 
String __fastcall TForm1::ToText(double Number, String Currency[2][4])
{
    String Group[4][3] = {{"тысяча ",   "тысячи ",    "тысяч "},
                  {"миллион ",  "миллиона ",  "миллионов "},
                  {"миллиард ", "миллиарда ", "миллиардов "},
                  {"триллион ", "триллиона ", "триллионов "}};
 
    String All[3][10] = {{"", "Один ", "Два ", "Три ", "Четыре ", "Пять ", "Шесть ", "Семь ", "Восемь ", "Девять "},
                 {"", "", "Двадцать ","Тридцать ","Сорок ","Пятьдесят ","Шестьдесят ","Семдесят ","Восемдесят ","Девяносто "},
                 {"","Сто ","Двести ", "Тристо ", "Четыресто ", "Пятьсот ", "Шестьсот ", "Семьсот ","Восемсот ","Девятсот "}};
 
    String El_Nine[10] = { "Десять ",    "Одиннадцать ", "Двенадцать ", "Тринадцать ",   "Четырнадцать ",
                   "Пятнадцать ", "Шестнадцать ", "Семнадцать ", "Восемнадцать ", "Девятнадцать " };
 
    String str = "";
    String FullStr = FloatToStr(Number);//IntToStr(Number);
    int DecPos = FullStr.Pos('.') > 0 ? FullStr.Pos('.') :
                 FullStr.Pos(',') > 0 ? FullStr.Pos(',') : FullStr.Length()+1;
 
    for (int s = 0; s <= (DecPos<FullStr.Length()); s++)
    {
        String NumStr = (!s ? FullStr.SubString(1,DecPos-1) : FullStr.SubString(DecPos+1,FullStr.Length()));
 
        int NumLength = NumStr.Length();
        int Groups = (NumLength-1)/3;
        for (int i = Groups; i>=0; i--)
        {
            int k = (i==Groups ? NumLength - Groups*3 : 3);
            String NOG_Str = NumStr.SubString(NumLength+1-i*3-k,k);
            String strgr="";
 
            for (int j = 1; j<=k ; j++)
            {
                bool LowerNotFirst = (s==0 && i==Groups && j==1);
                if (j==k-1 && NOG_Str[j] == '1')
                {
                    strgr += ToLowerCase(El_Nine[StrToInt(NOG_Str[k])], LowerNotFirst);
                    break;
                }
                else
                {
                    if ((j==k && NOG_Str[j] == '1') && (i>0 && Group[i-1][3] == "Ж" || Currency[s][3] == "Ж")) strgr += ToLowerCase("Одна ", LowerNotFirst);
                    else if ((j==k && NOG_Str[j] == '2') && (i>0 && Group[i-1][3] == "Ж" || Currency[s][3] == "Ж")) strgr += ToLowerCase("Две ", LowerNotFirst);
                    else strgr += ToLowerCase(All[k-j][StrToInt(NOG_Str[j])], LowerNotFirst);
                }
            }
            String grName = "";
            if (i>0 && NOG_Str.ToInt() > 0)
            {
                int LOG = NOG_Str.ToInt()%100;
                if (LOG > 10 && LOG < 19 ) grName = Group[i-1][2]+" ";
                else if (LOG%10 == 1) grName = Group[i-1][0]+" ";
                else if (LOG%10 > 1 && LOG%10 < 5) grName = Group[i-1][1]+" ";
                else grName = Group[i-1][2]+" ";
            }
            str+=strgr + grName;
        }
        int LOG = NumStr.ToInt()%100;
        if (LOG > 10 && LOG < 19 ) str += Currency[s][2] + " ";
        else if (LOG%10 == 1) str += Currency[s][0]+" ";
        else if (LOG%10 > 1 && LOG%10 < 5) str += Currency[s][1]+" ";
        else str += Currency[s][2]+" ";
    }
    return str;
}
 
//---------------------------------------------------------------------------
